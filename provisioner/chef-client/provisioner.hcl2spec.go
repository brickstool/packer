// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package chefclient

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ChefEnvironment":            &hcldec.AttrSpec{Name: "chef_environment", Type: cty.String, Required: false},
		"ChefLicense":                &hcldec.AttrSpec{Name: "chef_license", Type: cty.String, Required: false},
		"ClientKey":                  &hcldec.AttrSpec{Name: "client_key", Type: cty.String, Required: false},
		"ConfigTemplate":             &hcldec.AttrSpec{Name: "config_template", Type: cty.String, Required: false},
		"ElevatedUser":               &hcldec.AttrSpec{Name: "elevated_user", Type: cty.String, Required: false},
		"ElevatedPassword":           &hcldec.AttrSpec{Name: "elevated_password", Type: cty.String, Required: false},
		"EncryptedDataBagSecretPath": &hcldec.AttrSpec{Name: "encrypted_data_bag_secret_path", Type: cty.String, Required: false},
		"ExecuteCommand":             &hcldec.AttrSpec{Name: "execute_command", Type: cty.String, Required: false},
		"GuestOSType":                &hcldec.AttrSpec{Name: "guest_os_type", Type: cty.String, Required: false},
		"InstallCommand":             &hcldec.AttrSpec{Name: "install_command", Type: cty.String, Required: false},
		"KnifeCommand":               &hcldec.AttrSpec{Name: "knife_command", Type: cty.String, Required: false},
		"NodeName":                   &hcldec.AttrSpec{Name: "node_name", Type: cty.String, Required: false},
		"PolicyGroup":                &hcldec.AttrSpec{Name: "policy_group", Type: cty.String, Required: false},
		"PolicyName":                 &hcldec.AttrSpec{Name: "policy_name", Type: cty.String, Required: false},
		"PreventSudo":                &hcldec.AttrSpec{Name: "prevent_sudo", Type: cty.Bool, Required: false},
		"RunList":                    &hcldec.AttrSpec{Name: "run_list", Type: cty.List(cty.String), Required: false},
		"ServerUrl":                  &hcldec.AttrSpec{Name: "server_url", Type: cty.String, Required: false},
		"SkipCleanClient":            &hcldec.AttrSpec{Name: "skip_clean_client", Type: cty.Bool, Required: false},
		"SkipCleanNode":              &hcldec.AttrSpec{Name: "skip_clean_node", Type: cty.Bool, Required: false},
		"SkipCleanStagingDirectory":  &hcldec.AttrSpec{Name: "skip_clean_staging_directory", Type: cty.Bool, Required: false},
		"SkipInstall":                &hcldec.AttrSpec{Name: "skip_install", Type: cty.Bool, Required: false},
		"SslVerifyMode":              &hcldec.AttrSpec{Name: "ssl_verify_mode", Type: cty.String, Required: false},
		"TrustedCertsDir":            &hcldec.AttrSpec{Name: "trusted_certs_dir", Type: cty.String, Required: false},
		"StagingDir":                 &hcldec.AttrSpec{Name: "staging_directory", Type: cty.String, Required: false},
		"ValidationClientName":       &hcldec.AttrSpec{Name: "validation_client_name", Type: cty.String, Required: false},
		"ValidationKeyPath":          &hcldec.AttrSpec{Name: "validation_key_path", Type: cty.String, Required: false},
	}
	return s
}
