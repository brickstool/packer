// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package docker

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Author":           &hcldec.AttrSpec{Name: "author", Type: cty.String, Required: false},
		"Changes":          &hcldec.AttrSpec{Name: "changes", Type: cty.List(cty.String), Required: false},
		"Commit":           &hcldec.AttrSpec{Name: "commit", Type: cty.Bool, Required: false},
		"ContainerDir":     &hcldec.AttrSpec{Name: "container_dir", Type: cty.String, Required: false},
		"Discard":          &hcldec.AttrSpec{Name: "discard", Type: cty.Bool, Required: false},
		"ExecUser":         &hcldec.AttrSpec{Name: "exec_user", Type: cty.String, Required: false},
		"ExportPath":       &hcldec.AttrSpec{Name: "export_path", Type: cty.String, Required: false},
		"Image":            &hcldec.AttrSpec{Name: "image", Type: cty.String, Required: false},
		"Message":          &hcldec.AttrSpec{Name: "message", Type: cty.String, Required: false},
		"Privileged":       &hcldec.AttrSpec{Name: "privileged", Type: cty.Bool, Required: false},
		"Pty":              &hcldec.AttrSpec{Name: "pty", Type: cty.Bool, Required: false},
		"Pull":             &hcldec.AttrSpec{Name: "pull", Type: cty.Bool, Required: false},
		"RunCommand":       &hcldec.AttrSpec{Name: "run_command", Type: cty.List(cty.String), Required: false},
		"Volumes":          &hcldec.BlockAttrsSpec{TypeName: "volumes", ElementType: cty.String, Required: false},
		"FixUploadOwner":   &hcldec.AttrSpec{Name: "fix_upload_owner", Type: cty.Bool, Required: false},
		"WindowsContainer": &hcldec.AttrSpec{Name: "windows_container", Type: cty.Bool, Required: false},
		"Login":            &hcldec.AttrSpec{Name: "login", Type: cty.Bool, Required: false},
		"LoginPassword":    &hcldec.AttrSpec{Name: "login_password", Type: cty.String, Required: false},
		"LoginServer":      &hcldec.AttrSpec{Name: "login_server", Type: cty.String, Required: false},
		"LoginUsername":    &hcldec.AttrSpec{Name: "login_username", Type: cty.String, Required: false},
		"EcrLogin":         &hcldec.AttrSpec{Name: "ecr_login", Type: cty.Bool, Required: false},
	}
	for k, v := range (&Config{}).AwsAccessConfig.HCL2Spec() {
		s[k] = v
	}
	return s
}
