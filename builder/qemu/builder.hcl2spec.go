// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package qemu

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"ISOSkipCache":       &hcldec.AttrSpec{Name: "iso_skip_cache", Type: cty.Bool, Required: false},
		"Accelerator":        &hcldec.AttrSpec{Name: "accelerator", Type: cty.String, Required: false},
		"AdditionalDiskSize": &hcldec.AttrSpec{Name: "disk_additional_size", Type: cty.List(cty.String), Required: false},
		"CpuCount":           &hcldec.AttrSpec{Name: "cpus", Type: cty.Number, Required: false},
		"DiskInterface":      &hcldec.AttrSpec{Name: "disk_interface", Type: cty.String, Required: false},
		"DiskSize":           &hcldec.AttrSpec{Name: "disk_size", Type: cty.String, Required: false},
		"DiskCache":          &hcldec.AttrSpec{Name: "disk_cache", Type: cty.String, Required: false},
		"DiskDiscard":        &hcldec.AttrSpec{Name: "disk_discard", Type: cty.String, Required: false},
		"DetectZeroes":       &hcldec.AttrSpec{Name: "disk_detect_zeroes", Type: cty.String, Required: false},
		"SkipCompaction":     &hcldec.AttrSpec{Name: "skip_compaction", Type: cty.Bool, Required: false},
		"DiskCompression":    &hcldec.AttrSpec{Name: "disk_compression", Type: cty.Bool, Required: false},
		"Format":             &hcldec.AttrSpec{Name: "format", Type: cty.String, Required: false},
		"Headless":           &hcldec.AttrSpec{Name: "headless", Type: cty.Bool, Required: false},
		"DiskImage":          &hcldec.AttrSpec{Name: "disk_image", Type: cty.Bool, Required: false},
		"UseBackingFile":     &hcldec.AttrSpec{Name: "use_backing_file", Type: cty.Bool, Required: false},
		"MachineType":        &hcldec.AttrSpec{Name: "machine_type", Type: cty.String, Required: false},
		"MemorySize":         &hcldec.AttrSpec{Name: "memory", Type: cty.Number, Required: false},
		"NetDevice":          &hcldec.AttrSpec{Name: "net_device", Type: cty.String, Required: false},
		"OutputDir":          &hcldec.AttrSpec{Name: "output_directory", Type: cty.String, Required: false},
		"QemuBinary":         &hcldec.AttrSpec{Name: "qemu_binary", Type: cty.String, Required: false},
		"QMPEnable":          &hcldec.AttrSpec{Name: "qmp_enable", Type: cty.Bool, Required: false},
		"QMPSocketPath":      &hcldec.AttrSpec{Name: "qmp_socket_path", Type: cty.String, Required: false},
		"SSHHostPortMin":     &hcldec.AttrSpec{Name: "ssh_host_port_min", Type: cty.Number, Required: false},
		"SSHHostPortMax":     &hcldec.AttrSpec{Name: "ssh_host_port_max", Type: cty.Number, Required: false},
		"UseDefaultDisplay":  &hcldec.AttrSpec{Name: "use_default_display", Type: cty.Bool, Required: false},
		"VNCBindAddress":     &hcldec.AttrSpec{Name: "vnc_bind_address", Type: cty.String, Required: false},
		"VNCUsePassword":     &hcldec.AttrSpec{Name: "vnc_use_password", Type: cty.Bool, Required: false},
		"VNCPortMin":         &hcldec.AttrSpec{Name: "vnc_port_min", Type: cty.Number, Required: false},
		"VNCPortMax":         &hcldec.AttrSpec{Name: "vnc_port_max", Type: cty.Number, Required: false},
		"VMName":             &hcldec.AttrSpec{Name: "vm_name", Type: cty.String, Required: false},
		"SSHWaitTimeout":     &hcldec.AttrSpec{Name: "ssh_wait_timeout", Type: cty.String, Required: false},
		"RunOnce":            &hcldec.AttrSpec{Name: "run_once", Type: cty.Bool, Required: false},
	}
	for k, v := range (&Config{}).HTTPConfig.HCL2Spec() {
		s[k] = v
	}
	for k, v := range (&Config{}).ISOConfig.HCL2Spec() {
		s[k] = v
	}
	for k, v := range (&Config{}).VNCConfig.HCL2Spec() {
		s[k] = v
	}
	for k, v := range (&Config{}).ShutdownConfig.HCL2Spec() {
		s[k] = v
	}
	for k, v := range (&Config{}).FloppyConfig.HCL2Spec() {
		s[k] = v
	}
	return s
}
