// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package hyperone

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"APIURL":               &hcldec.AttrSpec{Name: "api_url", Type: cty.String, Required: false},
		"Token":                &hcldec.AttrSpec{Name: "token", Type: cty.String, Required: false},
		"Project":              &hcldec.AttrSpec{Name: "project", Type: cty.String, Required: false},
		"TokenLogin":           &hcldec.AttrSpec{Name: "token_login", Type: cty.String, Required: false},
		"StateTimeout":         &hcldec.AttrSpec{Name: "state_timeout", Type: cty.String, Required: false},
		"SourceImage":          &hcldec.AttrSpec{Name: "source_image", Type: cty.String, Required: false},
		"ImageName":            &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"ImageDescription":     &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"ImageService":         &hcldec.AttrSpec{Name: "image_service", Type: cty.String, Required: false},
		"VmType":               &hcldec.AttrSpec{Name: "vm_type", Type: cty.String, Required: false},
		"VmName":               &hcldec.AttrSpec{Name: "vm_name", Type: cty.String, Required: false},
		"DiskName":             &hcldec.AttrSpec{Name: "disk_name", Type: cty.String, Required: false},
		"DiskType":             &hcldec.AttrSpec{Name: "disk_type", Type: cty.String, Required: false},
		"DiskSize":             &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"Network":              &hcldec.AttrSpec{Name: "network", Type: cty.String, Required: false},
		"PrivateIP":            &hcldec.AttrSpec{Name: "private_ip", Type: cty.String, Required: false},
		"PublicIP":             &hcldec.AttrSpec{Name: "public_ip", Type: cty.String, Required: false},
		"PublicNetAdpService":  &hcldec.AttrSpec{Name: "public_netadp_service", Type: cty.String, Required: false},
		"ChrootDisk":           &hcldec.AttrSpec{Name: "chroot_disk", Type: cty.Bool, Required: false},
		"ChrootDiskSize":       &hcldec.AttrSpec{Name: "chroot_disk_size", Type: cty.Number, Required: false},
		"ChrootDiskType":       &hcldec.AttrSpec{Name: "chroot_disk_type", Type: cty.String, Required: false},
		"ChrootMountPath":      &hcldec.AttrSpec{Name: "chroot_mount_path", Type: cty.String, Required: false},
		"ChrootCopyFiles":      &hcldec.AttrSpec{Name: "chroot_copy_files", Type: cty.List(cty.String), Required: false},
		"ChrootCommandWrapper": &hcldec.AttrSpec{Name: "chroot_command_wrapper", Type: cty.String, Required: false},
		"MountOptions":         &hcldec.AttrSpec{Name: "mount_options", Type: cty.List(cty.String), Required: false},
		"MountPartition":       &hcldec.AttrSpec{Name: "mount_partition", Type: cty.String, Required: false},
		"PreMountCommands":     &hcldec.AttrSpec{Name: "pre_mount_commands", Type: cty.List(cty.String), Required: false},
		"PostMountCommands":    &hcldec.AttrSpec{Name: "post_mount_commands", Type: cty.List(cty.String), Required: false},
		"SSHKeys":              &hcldec.AttrSpec{Name: "ssh_keys", Type: cty.List(cty.String), Required: false},
		"UserData":             &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
	}
	return s
}
