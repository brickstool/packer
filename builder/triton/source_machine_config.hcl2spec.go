// Code generated by "hcl2-schema -type SourceMachineConfig,MachineImageFilter"; DO NOT EDIT.\n

package triton

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*SourceMachineConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"MachineName":                 &hcldec.AttrSpec{Name: "source_machine_name", Type: cty.String, Required: false},
		"MachinePackage":              &hcldec.AttrSpec{Name: "source_machine_package", Type: cty.String, Required: false},
		"MachineImage":                &hcldec.AttrSpec{Name: "source_machine_image", Type: cty.String, Required: false},
		"MachineNetworks":             &hcldec.AttrSpec{Name: "source_machine_networks", Type: cty.List(cty.String), Required: false},
		"MachineMetadata":             &hcldec.BlockAttrsSpec{TypeName: "source_machine_metadata", ElementType: cty.String, Required: false},
		"MachineTags":                 &hcldec.BlockAttrsSpec{TypeName: "source_machine_tags", ElementType: cty.String, Required: false},
		"MachineFirewallEnabled":      &hcldec.AttrSpec{Name: "source_machine_firewall_enabled", Type: cty.Bool, Required: false},
		"source_machine_image_filter": &hcldec.BlockObjectSpec{TypeName: "MachineImageFilter", LabelNames: []string(nil), Nested: hcldec.ObjectSpec((&SourceMachineConfig{}).MachineImageFilters.HCL2Spec())},
	}
	return s
}

func (*MachineImageFilter) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"MostRecent": &hcldec.AttrSpec{Name: "most_recent", Type: cty.Bool, Required: false},
		"Name":       &hcldec.AttrSpec{Name: "name", Type: cty.String, Required: false},
		"OS":         &hcldec.AttrSpec{Name: "os", Type: cty.String, Required: false},
		"Version":    &hcldec.AttrSpec{Name: "version", Type: cty.String, Required: false},
		"Public":     &hcldec.AttrSpec{Name: "public", Type: cty.Bool, Required: false},
		"State":      &hcldec.AttrSpec{Name: "state", Type: cty.String, Required: false},
		"Owner":      &hcldec.AttrSpec{Name: "owner", Type: cty.String, Required: false},
		"Type":       &hcldec.AttrSpec{Name: "type", Type: cty.String, Required: false},
	}
	return s
}
