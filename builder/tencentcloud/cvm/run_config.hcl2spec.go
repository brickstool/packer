// Code generated by "hcl2-schema -type TencentCloudRunConfig,tencentCloudDataDisk"; DO NOT EDIT.\n

package cvm

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*TencentCloudRunConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"AssociatePublicIpAddress": &hcldec.AttrSpec{Name: "associate_public_ip_address", Type: cty.Bool, Required: false},
		"SourceImageId":            &hcldec.AttrSpec{Name: "source_image_id", Type: cty.String, Required: false},
		"InstanceType":             &hcldec.AttrSpec{Name: "instance_type", Type: cty.String, Required: false},
		"InstanceName":             &hcldec.AttrSpec{Name: "instance_name", Type: cty.String, Required: false},
		"DiskType":                 &hcldec.AttrSpec{Name: "disk_type", Type: cty.String, Required: false},
		"DiskSize":                 &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"VpcId":                    &hcldec.AttrSpec{Name: "vpc_id", Type: cty.String, Required: false},
		"VpcName":                  &hcldec.AttrSpec{Name: "vpc_name", Type: cty.String, Required: false},
		"VpcIp":                    &hcldec.AttrSpec{Name: "vpc_ip", Type: cty.String, Required: false},
		"SubnetId":                 &hcldec.AttrSpec{Name: "subnet_id", Type: cty.String, Required: false},
		"SubnetName":               &hcldec.AttrSpec{Name: "subnet_name", Type: cty.String, Required: false},
		"CidrBlock":                &hcldec.AttrSpec{Name: "cidr_block", Type: cty.String, Required: false},
		"SubnectCidrBlock":         &hcldec.AttrSpec{Name: "subnect_cidr_block", Type: cty.String, Required: false},
		"InternetChargeType":       &hcldec.AttrSpec{Name: "internet_charge_type", Type: cty.String, Required: false},
		"InternetMaxBandwidthOut":  &hcldec.AttrSpec{Name: "internet_max_bandwidth_out", Type: cty.Number, Required: false},
		"SecurityGroupId":          &hcldec.AttrSpec{Name: "security_group_id", Type: cty.String, Required: false},
		"SecurityGroupName":        &hcldec.AttrSpec{Name: "security_group_name", Type: cty.String, Required: false},
		"UserData":                 &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
		"UserDataFile":             &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"HostName":                 &hcldec.AttrSpec{Name: "host_name", Type: cty.String, Required: false},
		"RunTags":                  &hcldec.BlockAttrsSpec{TypeName: "run_tags", ElementType: cty.String, Required: false},
		"SSHPrivateIp":             &hcldec.AttrSpec{Name: "ssh_private_ip", Type: cty.Bool, Required: false},
		"data_disks":               &hcldec.BlockListSpec{TypeName: "[]tencentCloudDataDisk", Nested: hcldec.ObjectSpec((&TencentCloudRunConfig{}).DataDisks[0].HCL2Spec())},
	}
	return s
}

func (*tencentCloudDataDisk) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"DiskType":   &hcldec.AttrSpec{Name: "disk_type", Type: cty.String, Required: false},
		"DiskSize":   &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"SnapshotId": &hcldec.AttrSpec{Name: "disk_snapshot_id", Type: cty.String, Required: false},
	}
	return s
}
