// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package cloudstack

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"APIURL":                  &hcldec.AttrSpec{Name: "api_url", Type: cty.String, Required: false},
		"APIKey":                  &hcldec.AttrSpec{Name: "api_key", Type: cty.String, Required: false},
		"SecretKey":               &hcldec.AttrSpec{Name: "secret_key", Type: cty.String, Required: false},
		"AsyncTimeout":            &hcldec.AttrSpec{Name: "async_timeout", Type: cty.String, Required: false},
		"HTTPGetOnly":             &hcldec.AttrSpec{Name: "http_get_only", Type: cty.Bool, Required: false},
		"SSLNoVerify":             &hcldec.AttrSpec{Name: "ssl_no_verify", Type: cty.Bool, Required: false},
		"CIDRList":                &hcldec.AttrSpec{Name: "cidr_list", Type: cty.List(cty.String), Required: false},
		"CreateSecurityGroup":     &hcldec.AttrSpec{Name: "create_security_group", Type: cty.Bool, Required: false},
		"DiskOffering":            &hcldec.AttrSpec{Name: "disk_offering", Type: cty.String, Required: false},
		"DiskSize":                &hcldec.AttrSpec{Name: "disk_size", Type: cty.Number, Required: false},
		"EjectISO":                &hcldec.AttrSpec{Name: "eject_iso", Type: cty.Bool, Required: false},
		"EjectISODelay":           &hcldec.AttrSpec{Name: "eject_iso_delay", Type: cty.String, Required: false},
		"Expunge":                 &hcldec.AttrSpec{Name: "expunge", Type: cty.Bool, Required: false},
		"Hypervisor":              &hcldec.AttrSpec{Name: "hypervisor", Type: cty.String, Required: false},
		"InstanceName":            &hcldec.AttrSpec{Name: "instance_name", Type: cty.String, Required: false},
		"Network":                 &hcldec.AttrSpec{Name: "network", Type: cty.String, Required: false},
		"Project":                 &hcldec.AttrSpec{Name: "project", Type: cty.String, Required: false},
		"PublicIPAddress":         &hcldec.AttrSpec{Name: "public_ip_address", Type: cty.String, Required: false},
		"PublicPort":              &hcldec.AttrSpec{Name: "public_port", Type: cty.Number, Required: false},
		"SecurityGroups":          &hcldec.AttrSpec{Name: "security_groups", Type: cty.List(cty.String), Required: false},
		"ServiceOffering":         &hcldec.AttrSpec{Name: "service_offering", Type: cty.String, Required: false},
		"PreventFirewallChanges":  &hcldec.AttrSpec{Name: "prevent_firewall_changes", Type: cty.Bool, Required: false},
		"SourceISO":               &hcldec.AttrSpec{Name: "source_iso", Type: cty.String, Required: false},
		"SourceTemplate":          &hcldec.AttrSpec{Name: "source_template", Type: cty.String, Required: false},
		"TemporaryKeypairName":    &hcldec.AttrSpec{Name: "temporary_keypair_name", Type: cty.String, Required: false},
		"UseLocalIPAddress":       &hcldec.AttrSpec{Name: "use_local_ip_address", Type: cty.Bool, Required: false},
		"UserData":                &hcldec.AttrSpec{Name: "user_data", Type: cty.String, Required: false},
		"UserDataFile":            &hcldec.AttrSpec{Name: "user_data_file", Type: cty.String, Required: false},
		"Zone":                    &hcldec.AttrSpec{Name: "zone", Type: cty.String, Required: false},
		"TemplateName":            &hcldec.AttrSpec{Name: "template_name", Type: cty.String, Required: false},
		"TemplateDisplayText":     &hcldec.AttrSpec{Name: "template_display_text", Type: cty.String, Required: false},
		"TemplateOS":              &hcldec.AttrSpec{Name: "template_os", Type: cty.String, Required: false},
		"TemplateFeatured":        &hcldec.AttrSpec{Name: "template_featured", Type: cty.Bool, Required: false},
		"TemplatePublic":          &hcldec.AttrSpec{Name: "template_public", Type: cty.Bool, Required: false},
		"TemplatePasswordEnabled": &hcldec.AttrSpec{Name: "template_password_enabled", Type: cty.Bool, Required: false},
		"TemplateRequiresHVM":     &hcldec.AttrSpec{Name: "template_requires_hvm", Type: cty.Bool, Required: false},
		"TemplateScalable":        &hcldec.AttrSpec{Name: "template_scalable", Type: cty.Bool, Required: false},
		"TemplateTag":             &hcldec.AttrSpec{Name: "template_tag", Type: cty.String, Required: false},
		"Tags":                    &hcldec.BlockAttrsSpec{TypeName: "tags", ElementType: cty.String, Required: false},
	}
	for k, v := range (&Config{}).HTTPConfig.HCL2Spec() {
		s[k] = v
	}
	return s
}
