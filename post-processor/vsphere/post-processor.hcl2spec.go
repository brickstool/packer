// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package vsphere

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"Cluster":      &hcldec.AttrSpec{Name: "cluster", Type: cty.String, Required: false},
		"Datacenter":   &hcldec.AttrSpec{Name: "datacenter", Type: cty.String, Required: false},
		"Datastore":    &hcldec.AttrSpec{Name: "datastore", Type: cty.String, Required: false},
		"DiskMode":     &hcldec.AttrSpec{Name: "disk_mode", Type: cty.String, Required: false},
		"Host":         &hcldec.AttrSpec{Name: "host", Type: cty.String, Required: false},
		"ESXiHost":     &hcldec.AttrSpec{Name: "esxi_host", Type: cty.String, Required: false},
		"Insecure":     &hcldec.AttrSpec{Name: "insecure", Type: cty.Bool, Required: false},
		"Options":      &hcldec.AttrSpec{Name: "options", Type: cty.List(cty.String), Required: false},
		"Overwrite":    &hcldec.AttrSpec{Name: "overwrite", Type: cty.Bool, Required: false},
		"Password":     &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"ResourcePool": &hcldec.AttrSpec{Name: "resource_pool", Type: cty.String, Required: false},
		"Username":     &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"VMFolder":     &hcldec.AttrSpec{Name: "vm_folder", Type: cty.String, Required: false},
		"VMName":       &hcldec.AttrSpec{Name: "vm_name", Type: cty.String, Required: false},
		"VMNetwork":    &hcldec.AttrSpec{Name: "vm_network", Type: cty.String, Required: false},
	}
	return s
}
