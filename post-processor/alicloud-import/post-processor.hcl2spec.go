// Code generated by "hcl2-schema -type Config"; DO NOT EDIT.\n

package alicloudimport

import (
	"github.com/hashicorp/hcl2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

func (*Config) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"OSSBucket":                       &hcldec.AttrSpec{Name: "oss_bucket_name", Type: cty.String, Required: false},
		"OSSKey":                          &hcldec.AttrSpec{Name: "oss_key_name", Type: cty.String, Required: false},
		"SkipClean":                       &hcldec.AttrSpec{Name: "skip_clean", Type: cty.Bool, Required: false},
		"Tags":                            &hcldec.BlockAttrsSpec{TypeName: "tags", ElementType: cty.String, Required: false},
		"AlicloudImageName":               &hcldec.AttrSpec{Name: "image_name", Type: cty.String, Required: false},
		"AlicloudImageDescription":        &hcldec.AttrSpec{Name: "image_description", Type: cty.String, Required: false},
		"AlicloudImageShareAccounts":      &hcldec.AttrSpec{Name: "image_share_account", Type: cty.List(cty.String), Required: false},
		"AlicloudImageDestinationRegions": &hcldec.AttrSpec{Name: "image_copy_regions", Type: cty.List(cty.String), Required: false},
		"OSType":                          &hcldec.AttrSpec{Name: "image_os_type", Type: cty.String, Required: false},
		"Platform":                        &hcldec.AttrSpec{Name: "image_platform", Type: cty.String, Required: false},
		"Architecture":                    &hcldec.AttrSpec{Name: "image_architecture", Type: cty.String, Required: false},
		"Size":                            &hcldec.AttrSpec{Name: "image_system_size", Type: cty.String, Required: false},
		"Format":                          &hcldec.AttrSpec{Name: "format", Type: cty.String, Required: false},
		"AlicloudImageForceDelete":        &hcldec.AttrSpec{Name: "image_force_delete", Type: cty.Bool, Required: false},
	}
	for k, v := range (&Config{}).Config.HCL2Spec() {
		s[k] = v
	}
	return s
}
